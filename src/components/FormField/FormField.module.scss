@import '../../_assets/css/abstracts/mixins';

.root {
  display: flex;
  align-items: center;
  font-size: var(--fs-base);
  font-family: var(--font-mono);
}

.input {
  width: auto;
  flex-grow: 1;
  border: 1px solid;
  border-color: var(--gray-600);
  padding: 0px calc(var(--sp-base) + var(--sp-tight));
  height: 49px;
  transition: border-color 0.3s;
  font-size: inherit;
  color: var(--gray-600);
  font-family: var(--font-mono);
  background-color: var(--white-500);

  &:focus {
    border-color: var(--blue-500);
    outline: none;
  }

  &::placeholder {
    text-transform: uppercase;
    color: var(--gray-400);
    letter-spacing: 0.11em;
  }
}

textarea.input {
  padding-top: var(--sp-base);
  padding-bottom: var(--sp-base);
  min-height: 250px;
}

.text {
  position: absolute;
  top: 50%;
  left: 0;
  padding: 0 var(--sp-base);
  transform: translateY(-50%);
  font-size: inherit;
  text-transform: uppercase;
  color: var(--gray-400);
  letter-spacing: var(--ls-loose);
  transition: font-size 0.35s ease, top 0.35s ease, padding 0.35s ease;
  overflow: hidden;
  white-space: nowrap;
  max-width: 100%;
  text-overflow: ellipsis;
}

.textHasValue,
.input:focus + .text {
  top: 0.7rem;
  font-size: 0.4em;
}

.errorContainer {
  padding-top: var(--sp-base);
  padding-bottom: var(--sp-loose);
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--sp-tight);
}

.errorIcon {
  padding-top: 2px;
  fill: var(--red-500);
}

.errorMessage {
  font-family: var(--font-base);
  color: var(--red-500);
}
